//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EIReHex {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class DetailsEn {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DetailsEn() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EIReHex.DetailsEn", typeof(DetailsEn).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game speed selector in bottom right corner has default speed values:
        ///x1 for low position and x2 for high position..
        /// </summary>
        public static string GameSpeedDefaultRB {
            get {
                return ResourceManager.GetString("GameSpeedDefaultRB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game speed selector in bottom right corner has higher speed values:
        ///x2 for low position and x3 for high position..
        /// </summary>
        public static string GameSpeedFastRB {
            get {
                return ResourceManager.GetString("GameSpeedFastRB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Speeds up the game significantly when speed selector is clicked with mouse on the UI. Use keyboard to switch game speed to the regular values..
        /// </summary>
        public static string GameSpeedSuperCB {
            get {
                return ResourceManager.GetString("GameSpeedSuperCB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, experience is divided between characters in the party. This option allows each party member to gain the full value of experience.
        ///Note: characters can still gain different amount of experience, it depends on their intelligence..
        /// </summary>
        public static string PartyExpCB {
            get {
                return ResourceManager.GetString("PartyExpCB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stamina does not decrease below half while running if the character is not fighting. This feature saves our time when need to run over the location..
        /// </summary>
        public static string RunAmountBattleCB {
            get {
                return ResourceManager.GetString("RunAmountBattleCB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default running time for characters..
        /// </summary>
        public static string RunAmountDefaultRB {
            get {
                return ResourceManager.GetString("RunAmountDefaultRB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Double running time for characters..
        /// </summary>
        public static string RunAmountDoubleRB {
            get {
                return ResourceManager.GetString("RunAmountDoubleRB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The running time depends on the character stamina value..
        /// </summary>
        public static string RunAmountManaRB {
            get {
                return ResourceManager.GetString("RunAmountManaRB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fixed formula for calculating secondary skills experience cost for further levels.
        ///This information is displayed on the right panel when mouse is hovering over a skill..
        /// </summary>
        public static string SecondarySkillsCB {
            get {
                return ResourceManager.GetString("SecondarySkillsCB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This option allows to build complex magic spells even when character is unable to use them. This is very useful when you are trying to build a spell for a magic wand. You don&apos;t need to increase character&apos;s magic skills to create spells for items..
        /// </summary>
        public static string SpellConstuctorCB {
            get {
                return ResourceManager.GetString("SpellConstuctorCB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default game speed in villages / camps / towns..
        /// </summary>
        public static string VillageSpeedDefaultRB {
            get {
                return ResourceManager.GetString("VillageSpeedDefaultRB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The x2 game speed in villages / camps / towns..
        /// </summary>
        public static string VillageSpeedX2RB {
            get {
                return ResourceManager.GetString("VillageSpeedX2RB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The x3 game speed in villages / camps / towns..
        /// </summary>
        public static string VillageSpeedX3RB {
            get {
                return ResourceManager.GetString("VillageSpeedX3RB", resourceCulture);
            }
        }
    }
}
